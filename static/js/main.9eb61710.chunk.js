(this["webpackJsonpberkkirtay.github.io"]=this["webpackJsonpberkkirtay.github.io"]||[]).push([[0],{135:function(e,t,a){},149:function(e,t){},151:function(e,t){},162:function(e,t){},164:function(e,t){},191:function(e,t){},193:function(e,t){},194:function(e,t){},199:function(e,t){},201:function(e,t){},207:function(e,t){},209:function(e,t){},228:function(e,t){},240:function(e,t){},243:function(e,t){},458:function(e,t,a){"use strict";a.r(t);var i=a(1),n=a.n(i),s=a(126),o=a.n(s),r=(a(135),a(14)),l=a(4),c=a(16),h=a(130),d=a(0),m=function(){return Object(d.jsxs)(d.Fragment,{children:[Object(d.jsx)("hr",{}),Object(d.jsx)("div",{style:{display:"flex",justifyContent:"center"},children:Object(d.jsx)("i",{style:{marginTop:"0.5%"},children:"\xa9 2021-2023 Berk K\u0131rtay"})})]})},u=function(){var e=Object(i.useState)(""),t=Object(c.a)(e,2),a=t[0],n=t[1],s=Object(i.useState)(""),o=Object(c.a)(s,2),r=o[0],l=o[1],u=Object(i.useState)(""),p=Object(c.a)(u,2),b=p[0],g=p[1];return Object(d.jsxs)("div",{children:[Object(d.jsxs)("form",{className:"contactForm",onSubmit:function(e){e.preventDefault(),h.a.sendForm("service_hjgtclq","template_jxjide6",e.target,"user_LwYSRs6src8JJfa5nOOpf").then((function(e){alert("Email has been sent. Thanks!")}),(function(e){alert("Email couldn't be sent.")})),n(""),l(""),g("")},children:[Object(d.jsx)("label",{children:"Your name:"}),Object(d.jsx)("input",{type:"text",name:"name",required:!0,value:a,onChange:function(e){return n(e.target.value)}}),Object(d.jsx)("label",{children:"Your e-mail:"}),Object(d.jsx)("input",{type:"text",name:"email",required:!0,value:r,onChange:function(e){return l(e.target.value)}}),Object(d.jsx)("label",{children:"Your message:"}),Object(d.jsx)("textarea",{name:"text",style:{height:"300px"},required:!0,value:b,onChange:function(e){return g(e.target.value)}}),Object(d.jsx)("input",{id:"send",type:"submit",value:"Submit"})]}),Object(d.jsx)(m,{})]})},p=a.p+"static/media/pfp.6d37b9df.jpg",b=function(){var e={width:"85%",paddingLeft:"1%"};return Object(d.jsxs)(d.Fragment,{children:[Object(d.jsxs)("div",{className:"aboutme",children:[Object(d.jsxs)("div",{id:"profile",children:[Object(d.jsx)("div",{id:"profile-child-pfp",children:Object(d.jsx)("img",{src:p,alt:"pfp",width:"90%"})}),Object(d.jsx)("div",{id:"profile-child-desc",children:"Hi, I am a senior Computer Science student at Marmara University. I write software. I love learning about anything related to computer science and I am always eager to broaden my expertise!"})]}),Object(d.jsx)("hr",{}),Object(d.jsx)("h4",{style:{paddingLeft:"1%"},children:"My primary interests are:"}),Object(d.jsxs)("ul",{children:[Object(d.jsx)("li",{children:"Software Engineering"}),Object(d.jsx)("p",{style:e,children:"I am proficient about software development life cycles and knowledgeable about famous software engineering practices. I try to write clean, modular and efficient software."}),Object(d.jsx)("li",{children:"Cryptography"}),Object(d.jsx)("p",{style:e,children:"I have been studying and implementing concepts concerning Cryptography for a long time and some of my work include PKCS standards and essentials such as SSL, SHA, AES, RSA. "}),Object(d.jsx)("li",{children:"Artificial Intelligence"}),Object(d.jsx)("p",{style:e,children:"I am familiar with some metaheuristic techniques in the combinatorial optimization literature. I work with evolutionary algorithms and machine learning models in my studies. "}),Object(d.jsx)("li",{children:"Blockchain Technology"}),Object(d.jsx)("p",{style:e,children:"I am interested in blockchain and web3. I developed some basic applications of blockchain and decentralized transaction systems. I also work on decentralized apps."})]})]}),Object(d.jsx)(m,{})]})},g=function(e){var t=e.blog;return Object(d.jsx)("li",{style:{paddingBottom:"0.5%"},children:Object(d.jsxs)(r.b,{to:"/blog/"+t._id,children:[Object(d.jsxs)("h4",{style:{display:"inline"},children:[t.title,Object(d.jsx)("span",{style:{float:"right",overflow:"hidden"},children:t.date})]}),Object(d.jsxs)("p",{style:{width:"75%",color:"rgb(2, 129, 68)"},children:[t.text.slice(0,200),"..."]})]})})},j=a(37),y=a.n(j),f=a.p+"static/media/cryptography.393199d3.jpg",w=a.p+"static/media/sha2.9bf66cf3.png",x=a.p+"static/media/enigma_machine.6a0f14d8.png",O=function(){return Object(d.jsxs)("div",{children:[Object(d.jsx)("p",{children:"Cryptography has a long history. The story starts with Caesar himself. He created the first known encryption method called Caesar Cipher. He used this method to send secret messages to his legions on the battlefield. Long story short, you can say his method was so easily breakable, but at that time it was such a brilliant idea for war doctrines. This amazing idea gave him a huge advantage! But so soon humanity needed better methods to secure their messages. So, this is the beginning of Cryptography in our history."}),Object(d.jsx)("img",{src:f,alt:"Cryptography",width:"80%",height:"30%",style:{display:"block",margin:"auto",padding:"1%"}}),Object(d.jsx)("p",{children:"As number theory was being worked on, encryption algorithms were also getting more advanced. Before we invented computers, basic ciphers were enough to secure our messages. Back then you could not brute force those algorithms on paper. With the huge computational power we have today, we can break them instantly. After a long time, Germans invented enigma machine to encrypt their messages during World War 2. They were so assured; they thought their machine was unbreakable. Soon after, a genius named Alan Turing invented a machine called Turing machine and broke it and all other weak encryption methods once and for all."}),Object(d.jsx)("h4",{children:"An Enigma machine with four rotors:"}),Object(d.jsx)("img",{src:x,alt:"Enigma Machine",width:"80%",height:"50%",style:{display:"block",margin:"auto",padding:"1%"}}),Object(d.jsx)("p",{children:"The reason why enigma machine has a weak encryption method is that it only substitutes one character for another. It doesn't use a block cipher method, so today it can be considered as weak as Caesar Cipher."}),Object(d.jsx)("p",{children:"It is interesting that cryptography was the reason for the computers to show up. It is obvious that we needed a huge amount of computational power to strengthen our encryption methods. With the quick advance on processors, many concepts in number theory were possible to test and observe. This advance created a big jump in cryptography as well. Today we have very powerful cryptographic algorithms. You can secure any data, and nobody will ever know what it means unless you allow them to know. This is so amazingly fascinating! From easy as pie Caesar Cipher to unbreakable asynchronous encryption algorithms. I also have to mention block cipher since it is not convenient to use time-consuming asynchronous with big files or networking. We have AES algorithm for this case and it works very well!"}),Object(d.jsx)("p",{children:"It amazes me how much hashing algorithms have been improved in the last three decades. It is basically impossible to observe a collision for SHA256 algorithm. The collision chance for SHA256 algorithm is 10^-53. This number is enormously small so that I still can't comprehend how small it is. I love this side of computer science a lot and I think we are not done with cryptography yet. There were many ways to crack very recent encryption algorithms and all of them were countered with better practices after years. Let me give you an example; the only way to break an RSA key pair which is generated with big enough prime numbers is brute force. And as you can think, it's conceptually impossible to break RSA algorithm with brute force. Because we really can't find the divisors of a really big number. There would be only one exception to this; it is quantum computers."}),Object(d.jsx)("h4",{children:"A representation for SHA2 algorithm:"}),Object(d.jsx)("img",{src:w,alt:"SHA2",width:"70%",height:"30%",style:{display:"block",margin:"auto",padding:"1%"}}),Object(d.jsx)("p",{children:"Scientists say quantum computers will be millions of times faster than the computers we have today. If this is true, then quantum processors can simply brute force our ``powerful and unbreakable`` encryption algorithms. Well, in that case we can use this huge amount of computational power to generate stronger methods. The simplest example could be increasing the size of RSA key pairs. Today a size of 2048 bits key pair is seen as impossible to break. Well, we can generate much bigger numbers and primes with our quantum computers. So, my guess is we will have our algorithms and methods around even after the creation of a true quantum computer."}),Object(d.jsx)("p",{children:"I also think that this is not a threat to decentralized systems. We will not lose our decentralized systems as long as they keep up with the race. I can't say anything about our current blockchain systems. I really don't know what would happen to bitcoin when a beast quantum computer takes over the internet. I think all the decentralized systems we have now will adapt before those things happen and we will not see any dramatic results in our technology. I am still only amazed by this concept: some mathematicians and computer scientists do their best to improve this state-of-the-art technology and we can't do anything but wait to see what is going to happen in our next struggle."})]})},k=a.p+"static/media/dna.74489093.jpg",v=a.p+"static/media/crossing-over.c7db7fd7.jpg",I=function(){return Object(d.jsxs)("div",{children:[Object(d.jsx)("p",{children:"Nowadays, everyone talks about artificial intelligence. We can say AI is almost the most hyped area of computer science. What about how AI works? What kind of algorithms do we use to make our computers perform those intelligent things? The current state of AI is composed of several major concepts. The one I want to talk about is genetic algorithms. As its name says, it refers to the basic evolution mechanisms. There are different types and implementations of genetic algorithms. In fact, implementations can differ based on the scenario and model."}),Object(d.jsx)("img",{src:k,alt:"dna",width:"90%",height:"40%",style:{display:"block",margin:"auto",padding:"1%"}}),Object(d.jsx)("h3",{children:"A Simple Description:"}),Object(d.jsx)("p",{children:"Conceptually, we use mechanisms of evolution theory to implement this algorithm. Let's think of a program which tries to find the most feasible and fastest way to transport between two cities. Our program will use the natural selection mechanism so that it will generate two random paths between two given cities. We can call those paths initial population. This natural generation must be indeterministic, so we would not observe similar series of generations. This is also important to emulate real-life scenarios; just like all the humans have totally different DNA sequences. So, we can say that we simply map our model parameters to electronic gene sequence. After we generate our initial population, our program will perform a breeding loop with them. After breeding, we will have a new population (paths). We can call those child population."}),Object(d.jsx)("img",{src:v,alt:"crossingover",width:"90%",height:"40%",style:{display:"block",margin:"auto",padding:"1%"}}),Object(d.jsx)("p",{children:"But how does breeding work? During breeding, we use the method of crossing over; parents exchange their genes to create their children. It basically works like that in the picture above. In our case, instead of chromosomes, program parameters are being exchanged. At this moment of the program, we will select the better genes and continue our breeding cycles. So, this is the point that natural selection concept is being used. Most adaptable genes are selected against worse ones."}),Object(d.jsx)("p",{children:"But how can we get random genes out of breeding cycles? We cannot observe different parameters with only crossing over. We need mutation! Mutation is the only way for evolution! This means we can have different parameters out of nowhere on our program. We can implement mutations to our breeding cycles to get variation between parent and child nodes. With this way after several times of breeding cycles, we will have different types of paths. Our program has a unique way to check if a path is a better solution or not. So, after a specified amount of time, we will end up having the most adaptable genes (most feasible path) in our program loop."}),Object(d.jsx)("h3",{children:"An Evolved Antenna:"}),Object(d.jsxs)("div",{style:{margin:"0 auto",display:"inline-block"},children:[Object(d.jsx)("div",{style:{float:"left",width:"35%",margin:"10px"},children:Object(d.jsx)("img",{src:"https://upload.wikimedia.org/wikipedia/commons/f/ff/St_5-xband-antenna.jpg",alt:"Wiki",width:"95%",height:"80%",style:{display:"block",margin:"auto",padding:"1%"}})}),Object(d.jsx)("div",{style:{float:"left",width:"60%",marginTop:"20px"},children:Object(d.jsx)("i",{className:"italic",children:'"The 2006 NASA ST5 spacecraft antenna. This complicated shape was found by an evolutionary computer design program to create the best radiation pattern. It is known as an evolved antenna." (Wikipedia)'})})]}),Object(d.jsx)("p",{children:"This was a quick way to explain how a genetic algorithm would work. We can use or apply different techniques or other mechanisms based on our model or purposes. From the software perspective, a genetic algorithm would make an object work like an animal who constantly tries to survive in wild. There is a constant fight between all species or among same species in nature. There is a saying that the one most adaptable to change will survive. This is the most significant concept about evolution and nature. In software we change the term adaptability with optimality. There is never a perfect solution. It is pretty much like nature; there is no perfect DNA sequence, but there will always be one which is the most adaptable. When we implement genetic algorithms, we follow this essential rule of evolution. Our programs will not try to find the global optimal (perfect) solution, rather they will try to estimate it."}),Object(d.jsx)("p",{children:"So, why do we use genetic algorithms in the first place? Don't we need an optimal solution instead of an estimated one? The reasons for this can be lack of computational power or lack of information about models. Even if we entirely know our model and when we try to find an optimal solution using an exact algorithm, we would need to wait for a long amount of time because an exact algorithm will try every single possibility for our model. But those algorithms do not work in polynomial time complexity. They can have exponential time complexities and therefore consume too much computational power and until we found an optimal solution with them. Genetic algorithms, on the other hand, will estimate a solution in a very short time. Genetic algorithms are also called as stochastic search heuristics. They are faster, more feasible, but they do not give an optimal solution."}),Object(d.jsx)("p",{children:"Why genetic algorithms are important? Can we apply them to all the problems we face? How feasible would it be to use a genetic algorithm on a problem? Well, we can apply them to the problems where we have many parameters. It is very similar to the DNA and gene sequence; DNAs can have different parameters and different patterns and genes can form different kinds of DNA structures to be more adaptable. So, in software, programs where we use genetic algorithms constantly try to evolve in a better state. If we have bunch of different parameters and need to find a good enough but non-perfect solution, then genetic algorithms are life saver!"}),Object(d.jsx)("p",{children:"Think about TSP problem; the salesman would have many paths to finish traveling every node in the graph. This means there are so many parameters indicates a path for this problem. A genetic algorithm approach would work for this problem very well! Knapsack problem can be also solved gracefully with this algorithm!"}),Object(d.jsx)("h3",{children:"A picture from my own implementation: "}),Object(d.jsx)("img",{src:"https://raw.githubusercontent.com/berkkirtay/geneticalgorithms/main/examples/Knapsack.PNG",alt:"Example",width:"100%",height:"40%",style:{display:"block",margin:"auto",padding:"1%"}}),Object(d.jsx)("p",{children:"As we can see, population evolves through breeding cycles. We can understand we are closer to the optimal solution when cycles have similar outputs. When our population struggles to evolve in a better state, then we can suppose program reached to the most adaptable state. In the picture, we can observe that the last found scores are so close to each other. So, that's the point we can stop the algorithm and observe the results."}),Object(d.jsx)("p",{children:" You can get additional info from the following repository link:"}),Object(d.jsx)("a",{style:{color:"rgb(16, 133, 76)",paddingLeft:"5%"},href:"https://github.com/berkkirtay/geneticalgorithms",target:"_blank",rel:"noopener noreferrer",children:"My own implementation of genetic algorithms"}),Object(d.jsx)("p",{children:"Genetic algorithms are so useful for trainable models or real-life applications. It has a good use in robotics; basically, we can train robots, so that their prediction rate for good decisions will increase drastically."}),Object(d.jsx)("p",{children:"So, I think genetic algorithm method will be used for so a long time in computer science until we find a better approach. I would say that this algorithm reflects the nature's methods and the way how it solves the problems is very elegant. After all, nature has a huge amount of experience, and we only try to use its ways."})]})},C=a.p+"static/media/web2vsweb3.7089bbd6.png",T=a.p+"static/media/eth.fbcc86dd.jpg",A=function(){return Object(d.jsxs)("div",{children:[Object(d.jsx)("p",{children:"Now Web3 is gaining more and more popularity, there is a debate going on about how applicable and reliable web3 is. While some people talk about its decentralized aspect, some others talk about reliability of web. We all know that transition between web1 and web2 was quick; people started interacting with web pages. Clients suddenly started communicating with centralized servers. With this change, we were also introduced to cookies, user session data and so on. Most of the web service providers collect user data and use it for their business or they can even sell it in some cases. So, the mentality here is that most of those web services are free but users are products, and they pay their fees with their private data."}),Object(d.jsx)("img",{src:C,alt:"web2vsweb3",width:"90%",height:"40%",style:{display:"block",margin:"auto",padding:"1%"}}),Object(d.jsx)("p",{children:"What about web3? With web3 there will not be service owners or data collectors, therefore we, as internet users, are expected to gain more privacy on our personal data. In a sense, we will own our data and services. Basically, on a web3 website, we only use our wallet as our identity, and since it's a peer-to-peer system there is not any centeralized service provider that can control users. It's very promising and so many people are working on blockchain systems today."}),Object(d.jsx)("h4",{children:"As a person who works on decentralized applications, I want to talk about the potential risks of web3, therefore blockchain services:"}),Object(d.jsxs)("ul",{children:[Object(d.jsx)("li",{style:{margin:"8px"},children:"Blockchain technology is quite transparent, so exploring transactions of peers are so easy. It is not private at all. So, this fact invalidates the claim of anonymity. Also, we can't ignore the fact that there would be some dedicated corporates who try to scrap data from blockchains. But we can't say there is a significant amount of private data exposure of users. I think transparency of blockchains is ok. This fact directly invalidates the criticism about illegal activities on decentralized finance systems. So, blockchains still doesn't protect our privacy totally but it is way much better than what web2 offers."}),Object(d.jsx)("li",{style:{margin:"8px"},children:"High gas or maintenance fees, this is an ongoing problem on Ethereum blockchain and it is an undesired aspect of a blockchain; nobody would want to pay hundreds of dollars to just send a text over network."}),Object(d.jsx)("li",{style:{margin:"8px"},children:"The amount of energy being used by miners to handle peer transactions; recently this is a huge debate about how much energy proof-of-work method wastes."}),Object(d.jsx)("li",{style:{margin:"8px"},children:"Possible threats against blockchains, we know how the original ETH (now it's called ETC) had to be forked when the whole Ethereum blockchain was hacked with rare 51% hack. There can be other vulnerabilities that we would face in the future. This is truly a negative aspect of blockchains but can be overcome with experience and precautions."}),Object(d.jsx)("li",{style:{margin:"8px"},children:"A universal blockchain service is not possible, let's assume humanity colonized mars and assume cryptocurrencies are very commonly used. What if someone from mars wants to send a transaction to earth? This will take at least 2 hours to process transaction and return the results to the sender because of the distance between earth and mars. This can be an obstacle for future."}),Object(d.jsx)("li",{style:{margin:"8px"},children:"Web3 would remove databases from existence because of the nature of web3. This is a possibility, but highly unlikely under current circumstances."})]}),Object(d.jsx)("p",{children:"So, there are tradeoffs of using web3 in the long term. I personally wonder if this transition will happen or not. Perhaps we will see a better system than the current state of web3. Also, it seems that web3 services can't reach to high-end users successfully. Concepts such as, DeFi, NFTs, metaverse are the current trends but we still don't use web3 services in our daily life. Cryptocurrencies aren't even adapted in most of the countries."}),Object(d.jsx)("p",{children:"I started with negative aspects of web3. But why? I wanted to point out the fact that those risks exist, and they should be solved if web3 is going to be adapted totally."}),Object(d.jsx)("h3",{children:"What web3 can achieve?"}),Object(d.jsx)("p",{children:"For sure cryptocurrencies are very promising and they showed us many times how useful they can be. For example, so many coins are donated to Ukraine from all over the world to help Ukrainians. There are many other charity examples like that."}),Object(d.jsx)("p",{children:"In the long term, I believe that blockchain technology will be quite more applicable and useful for our daily lives. Indeed, it has many usage areas. Imagine a voting system that uses a properly implemented blockchain system; a system that never miscounts votes and prevents any fraud attempt. Or think about immutability aspect of blockchains, all the transactions will be in the blockchain without any change; so, this fact assures all the peers about reliability of the system."}),Object(d.jsx)("p",{children:"Blockchain technology will impact many areas and it will firstly change the finance system we know today. We can easily see this happening by looking at how much the total value of cryptocurrencies has been increased."}),Object(d.jsx)("h3",{children:"How to improve it?"}),Object(d.jsx)("p",{children:"A blockchain is based on cryptography and math. Basically, on a standard blockchain system, we use hashing algorithms, public key cryptography standards and some sweet data structures."}),Object(d.jsx)("p",{children:"So, with those brilliant mathematical concepts we create such an amazing system. But as we mentioned earlier, maintaining this system is costly, wasteful, and inefficient."}),Object(d.jsx)("h4",{children:"There are two main concepts that a blockchain can use."}),Object(d.jsxs)("ul",{children:[Object(d.jsxs)("li",{style:{margin:"8px"},children:[Object(d.jsx)("h4",{children:"Proof of Work:"}),"This method is based on how much work is done by a peer. In a blockchain system, miners always try to find a desired hash result. They just keep going until they find a result and gain the reward. This method is highly inefficient since it constantly uses processor power and causes high amount of energy waste."]}),Object(d.jsxs)("li",{style:{margin:"8px"},children:[Object(d.jsx)("h4",{children:"Proof of Stake:"}),"This method is based on creating a consensus by stakeholders. In a blockchain system that uses proof-of-stake concept, every action gets permitted by stakeholders (validators). The more you stake, the more authority you have on the system. This method is quite efficient compared to proof-of-work concept. First, you stake some number of coins and gain the trust of other peers. Second, in those systems if a validator tries to cheat then he will be banned from the chain and lose his stakes. Third, this method guards blockchain against some hacking threats. Overall, it's much better than the old method and is the current trend."]})]}),Object(d.jsx)("p",{children:"So, there is an efficient way to use those mathematical concepts and it is already being implemented on some blockchains (For example, Ethereum will update to ETH 2.0 soon which uses proof-of-stake instead of proof-of-work).(For example, Ethereum will update to ETH 2.0 soon which uses proof-of-stake instead of proof-of-work)."}),Object(d.jsx)("img",{src:T,alt:"eth",width:"90%",height:"40%",style:{display:"block",margin:"auto",padding:"1%"}}),Object(d.jsx)("p",{children:"The main question is, are we going to choose web3 over web2 or keep using both at the same time? Nobody can answer this for now. My opinion is that both will exist, and people will use the systems that they trust most as always. Is web3 going to gain the trust of people? I don't know. Is web3 going to provide enough privacy for the users? Yes!"}),Object(d.jsx)("p",{children:"We talked about the feasibility about those systems, and I think we should consider one more question. Is web3 really decentralized? Can we trust very big stakeholders? I think web3 can be truly decentralized if we build it properly and create a perfectly balanced consensus. This can be the new age of internet or can be a futile attempt or can be an improved system; it is all up to the people."})]})},S=a.p+"static/media/Telmac1800.273d35cd.jpg",W=a.p+"static/media/c64.aed4befe.png",H=(a(246),a(129)),N=a.n(H),E=function(){Object(i.useEffect)((function(){N.a.highlightAll()}),[]);return Object(d.jsxs)("div",{children:[Object(d.jsx)("p",{children:"Today, many of us use emulators for various reasons. Some of us use them to access the old hardware and some others use them to be able to play the retro games that their host platform does not support. But what is an emulation? Well, actually there can be two different answers to this question: We usually say that emulating is a virtualization method of a hardware in a software environment. But this description can be also described as: emulating is a virtualization of any machine. Here, the term machine can be interpreted as a hardware or a software. Software emulations are also called as virtual machines."}),Object(d.jsx)("p",{children:"In an engineering perspective, when one wants to get into emulation development world, they will probably start with emulating a CHIP-8 which is an interpreted language developed by Joseph Weisbecker used on the COSMAC VIP and Telmac 1800 8-bit microcomputers in the 70s. It is a virtual machine which can run 36 different instructions with a small memory capacity. It has only 2048-kb main memory along with small number of registers. An implementation of CHIP-8 emulator can be realized in any programming language in a relatively short time. So, this is why many developers start their emulator adventure with CHIP-8."}),Object(d.jsx)("h3",{children:"A picture of Telmac 1800 Microcomputer which CHIP-8 runs on [3]"}),Object(d.jsx)("img",{src:S,alt:"telmac1800",width:"90%",height:"40%",style:{display:"block",margin:"auto",padding:"1%"}}),Object(d.jsx)("p",{children:"Before diving into the technical details of CHIP-8, I want to talk about a very famous computer in the history, Commodore64 (C64). Commercially speaking, C64 achieved an enormous reputation and even today many retro computer fans and collectors still make a use of it. It was quite a milestone of home computers. Technically, C64 uses a 6502 CPU (MOS Technology 6502) which has 56 different instructions and 16-bit addressing mode. C64 has a 64 KB main memory and can support multicolor sprites along with better audio performance than his predecessors."}),Object(d.jsx)("h3",{children:"A picture of Commodore64 (C64) [4]"}),Object(d.jsx)("img",{src:W,alt:"telmac1800",width:"90%",height:"40%",style:{display:"block",margin:"auto",padding:"1%"}}),Object(d.jsx)("p",{children:"An emulator enthusiastic may take their hobby one step forward by developing a C64 emulator. C64 is a lot more complicated than CHIP-8. It is a hardware and it supports interrupts. It has multiple chips to handle more complex graphics and sound. Those mechanisms can be challenging for someone who tries to implement an emulator of C64."}),Object(d.jsx)("p",{children:"I personally started the development of my own C64 emulator and I already implemented a CHIP-8 emulator in C++ language. So, I think I learned about the workflow during a development of an emulator. If we want to develop an emulator for any hardware or virtual machine, we can follow the steps below:"}),Object(d.jsxs)("ul",{children:[Object(d.jsx)("li",{style:{margin:"8px"},children:"Deciding a suitable target machine based on your skills and experience. This is non-technical advice but if we aim to develop a very complex system without enough experience, then we can waste some valuable time. So, we can take our time to think of the most suitable target system."}),Object(d.jsx)("li",{style:{margin:"8px"},children:"Extensive research about technical architecture of the system we want to emulate. This step requires some general knowledge about computer organization as well. One must know how a CPU clock cycle and subroutines works and how instructions are decoded. Even more, one must know how interrupts and polling work. Secondly, extensive research will help us to understand the features of the target system we want to emulate; the components such as, display, audio, processing, and many more other features can be understood this way."}),Object(d.jsx)("li",{style:{margin:"8px"},children:"Building an abstract code base for your emulator. Abstracting the components (an object-oriented approach would work beautifully!) of the target system you want to build will cut your work into pieces, and therefore the progress will be more subtle."}),Object(d.jsx)("li",{style:{margin:"8px"},children:"Choosing the graphics and event engines that you feel most confident with."}),Object(d.jsx)("li",{style:{margin:"8px"},children:"A testing/debugging tool or ROM for the target system. Debugging will help a lot to observe whether the components work properly or not. This will save anyone from a high amount of struggle and keep their ambition at its finest!"}),Object(d.jsx)("li",{style:{margin:"8px"},children:"Enjoying the results of the emulator! Trying different kinds of ROMs on your emulator, or even programming your own ROMs!"})]}),Object(d.jsx)("p",{children:"Surely, I am in no position to create a framework of emulator development. I just want to show the workflow I follow. There can be wrong assumptions and approaches in those steps above, but it is always better to read from multiple resources and taking ideas from different people!"}),Object(d.jsx)("h2",{children:"A CHIP-8 (berk-8) Emulator with C++ and SDL2"}),Object(d.jsxs)("p",{children:["Here, I want to give a short detailed explanation about CHIP-8. You can also access this page and source code by visiting ",Object(d.jsx)("a",{style:{color:"rgb(16, 133, 76)"},href:"https://github.com/berkkirtay/berk-8",children:"github.com/berkkirtay/berk-8"}),"."]}),Object(d.jsx)("p",{children:"berk-8 uses general features of CHIP-8 interpreter. The development of berk-8 has an object-oriented approach and the code can be examined in a straightforward way. SDL2 library is used for the development of both graphics and sound. More detailed information and emulator execution examples can be found below."}),Object(d.jsx)("h3",{children:"Architecture of CHIP-8"}),Object(d.jsx)("h4",{children:"CHIP-8 Processor provides:"}),Object(d.jsxs)("ul",{children:[Object(d.jsx)("li",{style:{margin:"8px"},children:"A 2048 kb main memory with 8-bit word size"}),Object(d.jsx)("li",{style:{margin:"8px"},children:"16 8-bit registers (V)"}),Object(d.jsx)("li",{style:{margin:"8px"},children:"16 16-bit stack registers for recursive subroutine calls"}),Object(d.jsx)("li",{style:{margin:"8px"},children:"16 8-bit key registers for keypad I/O"}),Object(d.jsx)("li",{style:{margin:"8px"},children:"I 2 byte register for storing memory addresses"}),Object(d.jsx)("li",{style:{margin:"8px"},children:"PC, SP, a draw flag, delay and sound timers"}),Object(d.jsx)("li",{style:{margin:"8px"},children:"36 different 16-bit long instructions"})]}),Object(d.jsx)("h4",{children:"CHIP-8 Instruction Set Architecture:"}),Object(d.jsx)("p",{children:"As it is mentioned earlier, CHIP-8 has 36 different instructions and size of the instructions are 16-bit long. The instructions are in big-endian format, and they cover 2 contiguous memory areas per instruction. CHIP-8 has various types of instructions, such as arithmetic and logic operations, simple branching and jumping, subroutine calls and returns, polling and waiting, and graphics manipulation."}),Object(d.jsx)("p",{children:"All the instructions follow the general flow of a state machine approach. This can be observed in the emulateNextCycle function below."}),Object(d.jsx)("pre",{children:Object(d.jsx)("code",{className:"language-cpp",children:"void Chip8::emulateNextCycle()\n{\n    //FETCH step:\n    fetch();\n\n    // DECODE step:\n    decode();\n\n    // EXECUTE step:\n    (this->*instructionMap[opcode])();\n\n    // Handle timer and blockers:\n    calculateTimersAndBlock();\n}"})}),Object(d.jsx)("h4",{children:"CHIP-8 Display and Graphics:"}),Object(d.jsx)("p",{children:"CHIP-8 uses a 4 byte long 64*32 pixel monochrome display. Graphics is handled  with a basic sprite drawing instruction (Dxyn - DRW Vx, Vy, n). CHIP-8 has some built-in font set, and they are located in the first areas of main memory. Every font requires up to 5-bytes memory and new fonts can be programmed this way. Whenever a draw instruction is completed, the draw flag lets the graphics device know that it can render the display. So, this is how display works on CHIP-8."}),Object(d.jsx)("h4",{children:"CHIP-8 I/O:"}),Object(d.jsx)("p",{children:"Available I/O device types are display, keypad, and sound. There are polling and waiting instructions for I/O. For example, polling instructions checks the state of the keypad continuously and waiting instruction waits for a key to be pressed from the keypad. Sound and display also works with polling instructions. The timers also work at a constant rate of 60Hz."}),Object(d.jsx)("p",{children:"So, we can see that CHIP-8 has a very basic architecture and does not rely on complex interrupts or huge number of various instructions. The size of the memory and the registers are small, and display is handled with a basic sprite drawing instruction. An emulator for this interpreter can be easily implemented for many other platforms as well."}),Object(d.jsx)("h3",{children:"Examples from berk-8"}),Object(d.jsxs)("ul",{children:[Object(d.jsxs)("li",{style:{margin:"8px"},children:["Space Invaders",Object(d.jsx)("p",{align:"center",children:Object(d.jsx)("img",{src:"https://raw.githubusercontent.com/berkkirtay/berk-8/main/examples/space_invaders_with_berk8.gif",alt:"spaceinvaders",width:"90%",height:"40%"})})]}),Object(d.jsxs)("li",{style:{margin:"8px"},children:["Testing tool for the instruction set of CHIP-8",Object(d.jsx)("p",{align:"center",children:Object(d.jsx)("img",{src:"https://raw.githubusercontent.com/berkkirtay/berk-8/main/examples/test_1.png",alt:"testingtool",width:"90%",height:"40%"})})]})]}),Object(d.jsx)("h2",{children:"What about C64?"}),Object(d.jsx)("p",{children:"C64 is my next target machine for emulation, and I am willing to share my experiences in this blog. Once I finish the development of the C64 emulator, I will share a short detailed explanation about C64 architecture and example pictures from the emulator."}),Object(d.jsx)("p",{children:"The emulation journey is not over yet. In fact, this area of computing will be more related as the time goes on!"}),Object(d.jsx)("h2",{children:"References"}),Object(d.jsx)("p",{children:"[1] https://en.wikipedia.org/wiki/CHIP-8"}),Object(d.jsx)("p",{children:"[2] http://devernay.free.fr/hacks/chip8/C8TECH10.HTM"}),Object(d.jsxs)("p",{children:["[3] Telmac 1800 ",Object(d.jsx)("a",{style:{color:"rgb(16, 133, 76)"},href:"https://en.wikipedia.org/wiki/Telmac_1800#/media/File:Telmac1800.jpg",children:"en.wikipedia.org/wiki/Telmac_1800#/media/File:Telmac1800.jpg"})]}),Object(d.jsxs)("p",{children:["[4] Commodore64 ",Object(d.jsx)("a",{style:{color:"rgb(16, 133, 76)"},href:"https://en.wikipedia.org/wiki/Commodore_64#/media/File:Commodore-64-Computer-FL.jpg",children:"en.wikipedia.org/wiki/Commodore_64#/media/File:Commodore-64-Computer-FL.jpg"})]})]})},z=[{_id:y.a.createHash("SHA1").update("On Cryptography").digest("hex"),title:"On Cryptography",content:Object(d.jsx)(O,{}),date:"November 04, 2021",text:"Cryptography has a long history. The story starts with Caesar himself. He created the first known encryption method called Caesar Cipher. He used this method to send secret messages to his legions on the battlefield. Long story short, you can say his method was so easily breakable"},{_id:y.a.createHash("SHA1").update("My Thoughts on Genetic Algorithms").digest("hex"),title:"My Thoughts on Genetic Algorithms",content:Object(d.jsx)(I,{}),date:"November 19, 2021",text:"Nowadays, everyone talks about artificial intelligence. We can say AI is almost the most hyped area of computer science. What about how AI works? What kind of algorithms do we use to make our computers perform those intelligent things?"},{_id:y.a.createHash("SHA1").update("Web2 vs Web3 and Privacy").digest("hex"),title:"Web2 vs Web3 and Privacy",content:Object(d.jsx)(A,{}),date:"March 08, 2022",text:"Now Web3 is gaining more and more popularity, there is a debate going on about how applicable and reliable web3 is. While some people talk about its decentralized aspect, some others talk about"},{_id:y.a.createHash("SHA1").update("Emulator 101 and Beyond").digest("hex"),title:"Emulator 101 and Beyond",content:Object(d.jsx)(E,{}),date:"Jan 09, 2023",text:"Today, many of us use emulators for various reasons. Some of us use them to access the old hardware and some others use them to be able to play the games that their platform does not support.But what is an emulation?"}],P=function(){return Object(d.jsxs)("div",{className:"blogs",children:[Object(d.jsx)("div",{className:"projectLinksList",children:Object(d.jsx)("ul",{style:{paddingTop:"1%"},children:z.slice(0).reverse().map((function(e){return Object(d.jsx)(g,{blog:e},parseInt(e._id.substring(0,10),16))}))})}),Object(d.jsx)(m,{})]})},B=function(e){var t=e.blog;return Object(d.jsxs)("div",{className:"blogFooter",style:{paddingBottom:"2%"},children:[Object(d.jsx)("i",{style:{float:"right",margin:"0.5%"},children:t.date}),Object(d.jsx)("i",{style:{float:"left",margin:"0.5%"},children:"\xa9 Berk K\u0131rtay"})]})},L=function(){var e=Object(i.useState)(void 0),t=Object(c.a)(e,2),a=t[0],n=t[1],s=Object(l.f)()._id;return Object(i.useEffect)((function(){var e=z.find((function(e){return e._id===s}));n(e)}),[s]),Object(d.jsx)("div",{className:"blog",children:void 0!==a&&Object(d.jsxs)("div",{className:"blogBlock",children:[Object(d.jsx)("h1",{style:{color:"rgb(41, 161, 103)"},children:a.title}),Object(d.jsxs)("div",{children:[a.content,Object(d.jsx)("hr",{}),Object(d.jsx)(B,{blog:a})]})]})})};var _=Object(l.g)((function(e){var t=e.history;return Object(i.useEffect)((function(){var e=t.listen((function(){window.scrollTo(0,0)}));return function(){e()}}),[t]),null})),M=a(460),q=function(){var e=Object(i.useState)(!1),t=Object(c.a)(e,2),a=t[0],n=t[1],s=Object(i.useRef)(null),o=function(e){s.current&&!s.current.contains(e.target)&&n(!1)};return Object(i.useEffect)((function(){return document.addEventListener("click",o,!0),function(){document.removeEventListener("click",o,!0)}}),[]),Object(d.jsxs)("div",{children:[Object(d.jsx)("link",{rel:"stylesheet",href:"https://pro.fontawesome.com/releases/v5.14.0/css/all.css"}),Object(d.jsx)(r.b,{to:"/",id:"navName",style:{marginLeft:"10px",fontSize:"180%",position:"relative",zIndex:"20"},children:"Berk K\u0131rtay"}),Object(d.jsx)("div",{style:{float:"right"},children:Object(d.jsxs)("ul",{className:"nav",children:[Object(d.jsx)("li",{className:"nav",style:{float:"right"},children:Object(d.jsx)(r.b,{to:"/blog",children:"My Blog"})}),Object(d.jsx)("li",{className:"nav",style:{float:"right"},children:Object(d.jsx)(r.b,{to:"/work",children:"My Work"})}),Object(d.jsx)("li",{className:"nav",style:{float:"right"},children:Object(d.jsx)(r.b,{to:"/experience",children:"My Experience"})}),Object(d.jsx)("li",{className:"nav",style:{float:"right"},children:Object(d.jsx)(r.b,{to:"/contact",children:"Contact me"})})]})}),Object(d.jsx)("div",{className:"hamburgerMenu",ref:s,children:Object(d.jsx)(M.a,{toggled:a,toggle:n})}),Object(d.jsx)("hr",{id:"bloghr"}),Object(d.jsx)("style",{jsx:"true",children:"\n               @media screen and (max-device-width: 768px),\n               screen and (orientation: portrait) {\n                    li.nav {\n                        color: white;\n                        float:none;\n                        justify-content: center;\n                        list-style: none;\n                        height: 140px;\n                        display: flex;\n                        align-items:center;\n                    }\n                    ul.nav {\n                        margin-top: 50px;\n                        display:  ".concat(a?"flex":"none",";\n                        flex-direction: column;\n                        background-color:#101820ff;\n                        flex-wrap: wrap;\n                        position: absolute;\n                        z-index:3;\n                        right: 0;\n                        top: 0;\n                        height:650px;\n                        width: 800px;\n                        justify-content: center;\n                        transition-duration: 1s;\n                        transition-property: margin-bottom;\n                    }\n                    .nav a {\n                        font-size: 130%;\n                        width: 800px;\n                    }\n                }\n            ")})]})},F=function(){var e={paddingLeft:"5%"};return Object(d.jsxs)("div",{children:[Object(d.jsxs)("div",{className:"projectLinksList",children:[Object(d.jsx)("h4",{style:{paddingLeft:"1%"},children:"Projects: "}),Object(d.jsxs)("ul",{children:[Object(d.jsx)("li",{children:Object(d.jsxs)("a",{href:"https://github.com/berkkirtay/basicblockchain",target:"_blank",rel:"noopener noreferrer",children:["A Proof-of-Work Based Blockchain Implementation ",Object(d.jsx)("i",{style:{zoom:"0.9"},className:"fas fa-external-link-alt"})]})}),Object(d.jsx)("li",{children:Object(d.jsxs)("a",{href:"https://github.com/berkkirtay/adaptive-genetic-algorithm-for-n-queens",target:"_blank",rel:"noopener noreferrer",children:["An Adaptive Genetic Algorithm for N-Queens Problem ",Object(d.jsx)("i",{style:{zoom:"0.9"},className:"fas fa-external-link-alt"})]})}),Object(d.jsx)("li",{children:Object(d.jsxs)("a",{href:"https://github.com/berkkirtay/blockchain-web-api",target:"_blank",rel:"noopener noreferrer",children:["A Blockchain Based Wallet Web App ",Object(d.jsx)("i",{style:{zoom:"0.9"},className:"fas fa-external-link-alt"})]})}),Object(d.jsx)("li",{children:Object(d.jsxs)("a",{href:"https://github.com/berkkirtay/berk-8",target:"_blank",rel:"noopener noreferrer",children:["A CHIP-8 (berk-8) Emulator with C++ and SDL2 ",Object(d.jsx)("i",{style:{zoom:"0.9"},className:"fas fa-external-link-alt"})]})}),Object(d.jsx)("li",{children:Object(d.jsxs)("a",{href:"https://github.com/berkkirtay/basicencryptorGUI",target:"_blank",rel:"noopener noreferrer",children:["A Basic RSA Algorithm Based File Encryptor ",Object(d.jsx)("i",{style:{zoom:"0.9"},className:"fas fa-external-link-alt"})]})}),Object(d.jsx)("li",{children:Object(d.jsxs)("a",{href:"https://github.com/berkkirtay/PasswordManager",target:"_blank",rel:"noopener noreferrer",children:["Password Manager Service ",Object(d.jsx)("i",{style:{zoom:"0.9"},className:"fas fa-external-link-alt"})]})}),Object(d.jsx)("li",{children:Object(d.jsxs)("a",{href:"https://github.com/berkkirtay/berkcoin",target:"_blank",rel:"noopener noreferrer",children:["Berkcoin Decentralized App ",Object(d.jsx)("i",{style:{zoom:"0.9"},className:"fas fa-external-link-alt"})]})}),Object(d.jsx)("li",{children:Object(d.jsxs)("a",{href:"https://github.com/berkkirtay/personal-website",target:"_blank",rel:"noopener noreferrer",children:["Source Code of This Website ",Object(d.jsx)("i",{style:{zoom:"0.9"},className:"fas fa-external-link-alt"})]})}),Object(d.jsx)("li",{children:Object(d.jsxs)("a",{href:"https://github.com/berkkirtay/geneticalgorithms",target:"_blank",rel:"noopener noreferrer",children:["Genetic Algorithms Applications ",Object(d.jsx)("i",{style:{zoom:"0.9"},className:"fas fa-external-link-alt"})]})}),Object(d.jsx)("li",{children:Object(d.jsxs)("a",{href:"https://github.com/berkkirtay/enigmamachine",target:"_blank",rel:"noopener noreferrer",children:["Enigma Machine Emulator ",Object(d.jsx)("i",{style:{zoom:"0.9"},className:"fas fa-external-link-alt"})]})})]}),Object(d.jsxs)("p",{style:e,children:["My open-source projects are available at: ",Object(d.jsxs)("a",{href:"https://github.com/berkkirtay",target:"_blank",rel:"noopener noreferrer",children:["GitHub ",Object(d.jsx)("i",{style:{zoom:"0.8"},className:"fas fa-external-link-alt"})]})]})]}),Object(d.jsx)("hr",{}),Object(d.jsxs)("div",{className:"projectLinksList",children:[Object(d.jsx)("h4",{style:{paddingLeft:"1%"},children:"Research: "}),Object(d.jsx)("p",{style:e,children:"Will be filled later."})]}),Object(d.jsx)(m,{})]})},D=function(){var e={width:"100%",paddingLeft:"3%"},t={color:"rgb(20, 175, 100)",width:"72%"};return Object(d.jsxs)("div",{children:[Object(d.jsxs)("div",{className:"projectLinksList",children:[Object(d.jsx)("h4",{style:{paddingLeft:"1%"},children:"Experience: "}),Object(d.jsx)("table",{style:e,children:Object(d.jsxs)("tbody",{children:[Object(d.jsxs)("tr",{children:[Object(d.jsx)("td",{style:t,children:Object(d.jsx)("span",{style:{display:"list-item"},children:"Software Engineer Intern - Amadeus"})}),Object(d.jsx)("td",{align:"center",children:"July 2022"}),Object(d.jsx)("td",{align:"center",children:"-"}),Object(d.jsx)("td",{align:"center",children:"Sep 2022"})]}),Object(d.jsxs)("tr",{children:[Object(d.jsx)("td",{style:t,children:Object(d.jsx)("span",{style:{display:"list-item"},children:"Junior Software Developer - Medyasoft"})}),Object(d.jsx)("td",{align:"center",children:"July 2021"}),Object(d.jsx)("td",{align:"center",children:"-"}),Object(d.jsx)("td",{align:"center",children:"June 2022"})]})]})})]}),Object(d.jsx)("hr",{}),Object(d.jsxs)("div",{className:"projectLinksList",children:[Object(d.jsx)("h4",{style:{paddingLeft:"1%"},children:"Education: "}),Object(d.jsx)("table",{style:e,children:Object(d.jsx)("tbody",{children:Object(d.jsxs)("tr",{children:[Object(d.jsx)("td",{style:t,children:Object(d.jsx)("span",{style:{display:"list-item"},children:"Computer Science and Engineering - Marmara University"})}),Object(d.jsx)("td",{align:"center",children:"Sep 2018"}),Object(d.jsx)("td",{align:"center",children:"-"}),Object(d.jsx)("td",{align:"center",children:"July 2023"})]})})}),Object(d.jsxs)("p",{style:{paddingLeft:"3%"},children:["More detailed experience information can be found at: ",Object(d.jsxs)("a",{href:"https://www.linkedin.com/in/berkkirtay/",target:"_blank",rel:"noopener noreferrer",children:["Linkedin ",Object(d.jsx)("i",{style:{zoom:"0.8"},className:"fas fa-external-link-alt"})]})]})]}),Object(d.jsx)(m,{})]})},G=function(){return Object(d.jsx)("div",{id:"parent",children:Object(d.jsxs)(r.a,{children:[Object(d.jsx)(_,{}),Object(d.jsx)(q,{}),Object(d.jsxs)(l.c,{children:[Object(d.jsx)(l.a,{path:"/blog/:_id",children:Object(d.jsx)(L,{})}),Object(d.jsx)(l.a,{path:"/blog",children:Object(d.jsx)(P,{})}),Object(d.jsx)(l.a,{path:"/contact",children:Object(d.jsx)(u,{})}),Object(d.jsx)(l.a,{path:"/work",children:Object(d.jsx)(F,{})}),Object(d.jsx)(l.a,{path:"/experience",children:Object(d.jsx)(D,{})}),Object(d.jsx)(l.a,{path:"/",children:Object(d.jsx)(b,{})})]}),Object(d.jsx)(_,{})]})})},R=function(e){e&&e instanceof Function&&a.e(3).then(a.bind(null,461)).then((function(t){var a=t.getCLS,i=t.getFID,n=t.getFCP,s=t.getLCP,o=t.getTTFB;a(e),i(e),n(e),s(e),o(e)}))};o.a.render(Object(d.jsx)(n.a.StrictMode,{children:Object(d.jsx)(G,{})}),document.getElementById("root")),R()}},[[458,1,2]]]);
//# sourceMappingURL=main.9eb61710.chunk.js.map