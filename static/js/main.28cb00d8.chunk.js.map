{"version":3,"sources":["assets/img/github.png","components/footer/Footer.js","components/contact/Contact.js","assets/img/pfp.jpg","components/Home.js","components/blog/BlogsTask.js","components/blog/Blogs.js","components/blog/blogComponentes/BlogFooter.js","components/blog/blogs/blog1/cryptography.jpg","components/blog/blogs/blog1/sha2.png","components/blog/blogs/blog1/enigma_machine.png","components/blog/blogs/blog1/Blog1.js","components/blog/blogs/blog2/dna.jpg","components/blog/blogs/blog2/crossing-over.jpg","components/blog/blogs/blog2/Blog2.js","components/blog/blogs/blog3/web2vsweb3.png","components/blog/blogs/blog3/eth.jpg","components/blog/blogs/blog3/Blog3.js","components/blog/Blog.js","components/tools/ScrollToTop.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","style","display","justifyContent","marginTop","Contact","useState","name","setName","email","setEmail","text","setText","className","onSubmit","e","preventDefault","emailjs","sendForm","target","then","result","alert","error","type","required","value","onChange","height","id","Home","src","pfp","alt","width","paddingLeft","href","rel","zoom","BlogsTask","blog","move","paddingBottom","to","_id","onMouseEnter","onMouseLeave","title","float","overflow","date","color","slice","parseInt","substring","Blogs","blogs","reverse","map","BlogFooter","margin","Blog1","cryptoimg","padding","enigma_machine","sha2img","dna","crossingover","Blog3","web2vsweb3","eth","Blog","undefined","setBlog","content","setContent","useParams","useEffect","find","Blog2","withRouter","history","unlisten","listen","window","scrollTo","Nav","click","hamburgerMenu","setHamburgerMenu","ref","useRef","handleClickOutside","current","contains","document","addEventListener","removeEventListener","marginLeft","fontSize","position","zIndex","toggled","toggle","jsx","App","crypto","createHash","update","digest","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.28cb00d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github.1c95b85d.png\";","import { Link } from \"react-router-dom\"\r\n\r\nimport githubIco from \"../../assets/img/github.png\"\r\nimport linkedinIco from \"../../assets/img/linkedin.png\"\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <>\r\n            <hr />\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <i style={{ marginTop: \"0.5%\" }}>© 2021-2022 Berk Kırtay</i>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useState } from \"react\"\r\nimport emailjs from 'emailjs-com';\r\nimport Footer from \"../footer/Footer\";\r\n\r\nconst Contact = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        emailjs.sendForm('service_hjgtclq', 'template_jxjide6', e.target, 'user_LwYSRs6src8JJfa5nOOpf')\r\n            .then((result) => {\r\n                alert(\"Email has been sent. Thanks!\")\r\n            }, (error) => {\r\n                alert(\"Email couldn't be sent.\")\r\n            });\r\n        setName('');\r\n        setEmail('');\r\n        setText('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"contactForm\" onSubmit={onSubmit}>\r\n                <label>Your name:</label>\r\n                <input type=\"text\" name=\"name\" required\r\n                    value={name} onChange={(e) => setName(e.target.value)} />\r\n                <label>Your e-mail:</label>\r\n                <input type=\"text\" name=\"email\" required\r\n                    value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                <label>Your message:</label>\r\n                <textarea name=\"text\" style={{ height: \"300px\" }} required\r\n                    value={text} onChange={(e) => setText(e.target.value)}></textarea>\r\n                <input id=\"send\" type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n            <Footer />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","export default __webpack_public_path__ + \"static/media/pfp.6d37b9df.jpg\";","import Footer from \"./footer/Footer\";\r\nimport pfp from \"../assets/img/pfp.jpg\";\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <div className=\"aboutme\">\r\n                <div id=\"profile\">\r\n                    <div id=\"profile-child-pfp\">\r\n                        <img src={pfp} alt=\"pfp\" width=\"90%\" height=\"40%\" />\r\n                    </div>\r\n                    <div id=\"profile-child-desc\">\r\n                        Hi, I am a junior Computer Science student at Marmara University. I write software. I love\r\n                        learning about anything related to computer science and I am always eager to expand my expertise!\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n                <h4 style={{ paddingLeft: \"1%\" }}>\r\n                    My primary interests are:\r\n                </h4>\r\n                <ul>\r\n                    <li>Software Engineering</li>\r\n                    <p style={{ width: \"85%\", paddingLeft: \"1%\" }}>I am proficient about software development life cycles and knowledgeable about famous software engineering practices. I try to write clean, modular and efficient software.</p>\r\n                    <li>Blockchain Technology</li>\r\n                    <p style={{ width: \"85%\", paddingLeft: \"1%\" }}>I am interested in blockchain and web3. I developed some basic applications of blockchain and decentralized transaction systems. I also work on decentralized apps.</p>\r\n                    <li >Cryptography</li>\r\n                    <p style={{ width: \"85%\", paddingLeft: \"1%\" }}>I have been interested in Cryptography for a long time and some of my work include digital signature methods and essentials such as SSL, SHA, AES, RSA. </p>\r\n                </ul>\r\n                <hr />\r\n            </div>\r\n\r\n            <div className=\"projectLinksList\">\r\n                <h4 style={{ paddingLeft: \"1%\" }}>Check out some of my projects on GitHub:</h4>\r\n                <ul>\r\n                    <li>\r\n                        <a href=\"https://github.com/berkkirtay/basicblockchain\" target=\"_blank\" rel=\"noopener noreferrer\">A Proof-of-Work Based Blockchain\r\n                            Implementation <i style={{ zoom: \"0.9\" }} className=\"fas fa-external-link-alt\"></i></a>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a href=\"https://github.com/berkkirtay/blockchain-web-api\" target=\"_blank\" rel=\"noopener noreferrer\">A Web App for My Blockchain\r\n                            Implementation <i style={{ zoom: \"0.9\" }} className=\"fas fa-external-link-alt\"></i></a>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a href=\"https://github.com/berkkirtay/PasswordManager\" target=\"_blank\" rel=\"noopener noreferrer\">Password Manager Service <i style={{ zoom: \"0.9\" }} className=\"fas fa-external-link-alt\"></i></a>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a href=\"https://github.com/berkkirtay/geneticalgorithms\" target=\"_blank\" rel=\"noopener noreferrer\">Genetic Algorithms Applications <i style={{ zoom: \"0.9\" }} className=\"fas fa-external-link-alt\"></i></a>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a href=\"https://github.com/berkkirtay/basicencryptorGUI\" target=\"_blank\" rel=\"noopener noreferrer\">Basic File Encryptor <i style={{ zoom: \"0.9\" }} className=\"fas fa-external-link-alt\"></i></a>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a href=\"https://github.com/berkkirtay/enigmamachine\" target=\"_blank\" rel=\"noopener noreferrer\">Enigma Machine Emulator <i style={{ zoom: \"0.9\" }} className=\"fas fa-external-link-alt\"></i></a>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a href=\"https://github.com/berkkirtay/berkcoin\" target=\"_blank\" rel=\"noopener noreferrer\">Berkcoin Decentralized App <i style={{ zoom: \"0.9\" }} className=\"fas fa-external-link-alt\"></i></a>\r\n                    </li>\r\n                </ul>\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Home\r\n\r\n","import { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nconst BlogsTask = ({ blog }) => {\r\n    const [move, setMove] = useState(true);\r\n\r\n    const onMove = () => {\r\n        // setMove(true);\r\n    }\r\n\r\n    const onLeave = () => {\r\n        // setMove(false);\r\n    }\r\n\r\n    return (\r\n        <li style={{ paddingBottom: \"0.5%\" }} key={parseInt(blog._id.substring(0, 4), 16)}>\r\n            <Link to={\"/blog/\" + blog._id} onMouseEnter={onMove} onMouseLeave={onLeave}>\r\n                <h4>{blog.title}<span style={{ float: \"right\", overflow: \"hidden\" }}>{blog.date}</span></h4></Link>\r\n            {move && <p style={{ width: \"75%\", color: \"rgb(2, 129, 68)\" }}>{blog.text.slice(0, 200)}...</p>}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default BlogsTask;\r\n","import Footer from \"../footer/Footer\";\r\nimport BlogTask from \"./BlogsTask\"\r\nconst Blogs = ({ blogs }) => {\r\n\r\n    return (\r\n        <div className=\"blogs\" >\r\n            <div className=\"projectLinksList\">\r\n                <ul>\r\n                    {blogs.slice(0).reverse().map((blog) => (\r\n                        <BlogTask blog={blog} />\r\n                    ))}\r\n                </ul>\r\n            </div >\r\n            <Footer />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Blogs\r\n","const BlogFooter = ({ blog }) => {\r\n    return (\r\n        <div className=\"blogFooter\" style={{ paddingBottom: \"4%\" }}>\r\n            <i style={{ float: \"right\", margin: \"0.5%\" }}>{blog.date}</i>\r\n            <i style={{ float: \"left\", margin: \"0.5%\" }}>© 2021-2022 Berk Kırtay</i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogFooter\r\n","export default __webpack_public_path__ + \"static/media/cryptography.393199d3.jpg\";","export default __webpack_public_path__ + \"static/media/sha2.9bf66cf3.png\";","export default __webpack_public_path__ + \"static/media/enigma_machine.6a0f14d8.png\";","import cryptoimg from \"./cryptography.jpg\"\r\nimport sha2img from \"./sha2.png\"\r\nimport enigma_machine from \"./enigma_machine.png\"\r\n\r\nconst Blog1 = () => {\r\n    return (\r\n        <div>\r\n            <p>\r\n                Cryptography has a long history. The story starts with Caesar himself. He created the first known encryption method called Caesar Cipher.\r\n                He used this method to send secret messages to his legions on the battlefield. Long story short, you can say his method was so easily breakable, but at that time it was such a brilliant idea for war doctrines. This amazing idea gave him a huge advantage! But so soon humanity needed better methods to secure their messages. So, this is the beginning of Cryptography in our history.\r\n            </p>\r\n            <img src={cryptoimg} alt=\"Cryptography\" width=\"80%\" height=\"30%\" style={{ display: \"block\", margin: \"auto\", padding: \"1%\" }} />\r\n            <p>\r\n                As number theory was being worked on, encryption algorithms were also getting more advanced. Before we invented computers, basic ciphers were enough to secure our messages. Back then you could not brute force those algorithms on paper. With the huge computational power we have today, we can break them instantly. After a long time, Germans invented enigma machine to encrypt their messages during World War 2. They were so assured; they thought their machine was unbreakable. Soon after, a genius named Alan Turing invented a machine called Turing machine and broke it and all other weak encryption methods once and for all.\r\n            </p>\r\n            <h4>An Enigma machine with four rotors:</h4>\r\n            <img src={enigma_machine} alt=\"Enigma Machine\" width=\"80%\" height=\"50%\" style={{ display: \"block\", margin: \"auto\", padding: \"1%\" }} />\r\n            <p>\r\n                The reason why enigma machine has a weak encryption method is that it only substitutes one character for another. It doesn't use a block cipher method, so today it can be considered as weak as Caesar Cipher.</p>\r\n            <p>\r\n                It is interesting that cryptography was the reason for the computers to show up. It is obvious that we needed a huge amount of computational power to strengthen our encryption methods. With the quick advance on processors, many concepts in number theory were possible to test and observe. This advance created a big jump in cryptography as well. Today we have very powerful cryptographic algorithms. You can secure any data, and nobody will ever know what it means unless you allow them to know. This is so amazingly fascinating! From easy as pie Caesar Cipher to unbreakable asynchronous encryption algorithms. I also have to mention block cipher since it is not convenient to use time-consuming asynchronous with big files or networking. We have AES algorithm for this case and it works very well!\r\n            </p>\r\n            <p>\r\n                It amazes me how much hashing algorithms have been improved in the last three decades. It is basically impossible to observe a collision for SHA256 algorithm. The collision chance for SHA256 algorithm is 10^-53. This number is enormously small so that I still can't comprehend how small it is. I love this side of computer science a lot and I think we are not done with cryptography yet. There were many ways to crack very recent encryption algorithms and all of them were countered with better practices after years. Let me give you an example; the only way to break an RSA key pair which is generated with big enough prime numbers is brute force. And as you can think, it's conceptually impossible to break RSA algorithm with brute force. Because we really can't find the divisors of a really big number. There would be only one exception to this; it is quantum computers.\r\n            </p>\r\n            <h4>A representation for SHA2 algorithm:</h4>\r\n            <img src={sha2img} alt=\"SHA2\" width=\"70%\" height=\"30%\" style={{ display: \"block\", margin: \"auto\", padding: \"1%\" }} />\r\n            <p>\r\n                Scientists say quantum computers will be millions of times faster than the computers we have today. If this is true, then quantum processors can simply brute force our ``powerful and unbreakable`` encryption algorithms. Well, in that case we can use this huge amount of computational power to generate stronger methods. The simplest example could be increasing the size of RSA key pairs. Today a size of 2048 bits key pair is seen as impossible to break. Well, we can generate much bigger numbers and primes with our quantum computers. So, my guess is we will have our algorithms and methods around even after the creation of a true quantum computer.\r\n            </p>\r\n            <p>\r\n                I also think that this is not a threat to decentralized systems. We will not lose our decentralized systems as long as they keep up with the race. I can't say anything about our current blockchain systems. I really don't know what would happen to bitcoin when a beast quantum computer takes over the internet. I think all the decentralized systems we have now will adapt before those things happen and we will not see any dramatic results in our technology. I am still only amazed by this concept: some mathematicians and computer scientists do their best to improve this state-of-the-art technology and we can't do anything but wait to see what is going to happen in our next struggle.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog1\r\n","export default __webpack_public_path__ + \"static/media/dna.74489093.jpg\";","export default __webpack_public_path__ + \"static/media/crossing-over.c7db7fd7.jpg\";","import dna from \"./dna.jpg\"\r\nimport crossingover from \"./crossing-over.jpg\"\r\n\r\nconst Blog1 = ({ blog }) => {\r\n    return (\r\n        <div>\r\n            <p>\r\n                Nowadays, everyone talks about artificial intelligence. We can say AI is almost the most hyped area of computer science. What about how AI works? What kind of algorithms do we use to make our computers perform those intelligent things? The current state of AI is composed of several major concepts. The one I want to talk about is genetic algorithms. As its name says, it refers to the basic evolution mechanisms. There are different types and implementations of genetic algorithms. In fact, implementations can differ based on the scenario and model.\r\n            </p>\r\n            <img src={dna} alt=\"dna\" width=\"90%\" height=\"40%\" style={{ display: \"block\", margin: \"auto\", padding: \"1%\" }} />\r\n            <h3>A Simple Description:</h3>\r\n            <p>\r\n                Conceptually, we use mechanisms of evolution theory to implement this algorithm. Let's think of a program which tries to find the most feasible and fastest way to transport between two cities. Our program will use the natural selection mechanism so that it will generate two random paths between two given cities. We can call those paths initial population. This natural generation must be indeterministic, so we would not observe similar series of generations. This is also important to emulate real-life scenarios; just like all the humans have totally different DNA sequences. So, we can say that we simply map our model parameters to electronic gene sequence. After we generate our initial population, our program will perform a breeding loop with them. After breeding, we will have a new population (paths). We can call those child population.\r\n            </p>\r\n            <img src={crossingover} alt=\"crossingover\" width=\"90%\" height=\"40%\" style={{ display: \"block\", margin: \"auto\", padding: \"1%\" }} />\r\n            <p>\r\n                But how does breeding work? During breeding, we use the method of crossing over; parents exchange their genes to create their children. It basically works like that in the picture above. In our case, instead of chromosomes, program parameters are being exchanged. At this moment of the program, we will select the better genes and continue our breeding cycles. So, this is the point that natural selection concept is being used. Most adaptable genes are selected against worse ones.\r\n            </p>\r\n            <p>\r\n                But how can we get random genes out of breeding cycles? We cannot observe different parameters with only crossing over. We need mutation! Mutation is the only way for evolution! This means we can have different parameters out of nowhere on our program. We can implement mutations to our breeding cycles to get variation between parent and child nodes. With this way after several times of breeding cycles, we will have different types of paths. Our program has a unique way to check if a path is a better solution or not. So, after a specified amount of time, we will end up having the most adaptable genes (most feasible path) in our program loop.\r\n            </p>\r\n\r\n            <h3>An Evolved Antenna:</h3>\r\n            <div style={{ margin: \"0 auto\", display: \"inline-block\" }}>\r\n                <div style={{ float: \"left\", width: \"35%\", margin: \"10px\" }}>\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/f/ff/St_5-xband-antenna.jpg\" alt=\"Wiki\" width=\"95%\" height=\"80%\" style={{ display: \"block\", margin: \"auto\", padding: \"1%\" }} />\r\n                </div>\r\n                <div style={{ float: \"left\", width: \"60%\", marginTop: \"20px\" }}>\r\n                    <i className=\"italic\" >\"The 2006 NASA ST5 spacecraft antenna. This complicated shape was found by an evolutionary computer design program to create the best radiation pattern. It is known as an evolved antenna.\" (Wikipedia)</i>\r\n                </div>\r\n            </div>\r\n            <p>\r\n                This was a quick way to explain how a genetic algorithm would work. We can use or apply different techniques or other mechanisms based on our model or purposes. From the software perspective, a genetic algorithm would make an object work like an animal who constantly tries to survive in wild. There is a constant fight between all species or among same species in nature. There is a saying that the one most adaptable to change will survive. This is the most significant concept about evolution and nature.\r\n                In software we change the term adaptability with optimality. There is never a perfect solution. It is pretty much like nature; there is no perfect DNA sequence, but there will always be one which is the most adaptable. When we implement genetic algorithms, we follow this essential rule of evolution. Our programs will not try to find the global optimal (perfect) solution, rather they will try to estimate it.\r\n            </p>\r\n\r\n            <p>\r\n                So, why do we use genetic algorithms in the first place? Don't we need an optimal solution instead of an estimated one? The reasons for this can be lack of computational power or lack of information about models. Even if we entirely know our model and when we try to find an optimal solution using an exact algorithm, we would need to wait for a long amount of time because an exact algorithm will try every single possibility for our model. But those algorithms do not work in polynomial time complexity. They can have exponential time complexities and therefore consume too much computational power and until we found an optimal solution with them. Genetic algorithms, on the other hand, will estimate a solution in a very short time. Genetic algorithms are also called as stochastic search heuristics. They are faster, more feasible, but they do not give an optimal solution.\r\n            </p>\r\n\r\n            <p>\r\n                Why genetic algorithms are important? Can we apply them to all the problems we face? How feasible would it be to use a genetic algorithm on a problem? Well, we can apply them to the problems where we have many parameters. It is very similar to the DNA and gene sequence; DNAs can have different parameters and different patterns and genes can form different kinds of DNA structures to be more adaptable. So, in software, programs where we use genetic algorithms constantly try to evolve in a better state. If we have bunch of different parameters and need to find a good enough but non-perfect solution, then genetic algorithms are life saver!\r\n            </p>\r\n\r\n            <p>\r\n                Think about TSP problem; the salesman would have many paths to finish traveling every node in the graph. This means there are so many parameters indicates a path for this problem. A genetic algorithm approach would work for this problem very well! Knapsack problem can be also solved gracefully with this algorithm!\r\n            </p>\r\n\r\n            <h3>A picture from my own implementation: </h3>\r\n            <img src=\"https://raw.githubusercontent.com/berkkirtay/geneticalgorithms/main/examples/Knapsack.PNG\" alt=\"Example\" width=\"100%\" height=\"40%\" style={{ display: \"block\", margin: \"auto\", padding: \"1%\" }} />\r\n\r\n            <p>\r\n                As we can see, population evolves through breeding cycles. We can understand we are closer to the optimal solution when cycles have similar outputs. When our population struggles to evolve in a better state, then we can suppose program reached to the most adaptable state. In the picture, we can observe that the last found scores are so close to each other. So, that's the point we can stop the algorithm and observe the results.\r\n            </p>\r\n            <p> You can get additional info from the following repository link:</p>\r\n\r\n            <a style={{ color: \"rgb(16, 133, 76)\", paddingLeft: \"5%\" }} href=\"https://github.com/berkkirtay/geneticalgorithms\" target=\"_blank\" rel=\"noopener noreferrer\">My own implementation of genetic algorithms</a>\r\n\r\n            <p>\r\n                Genetic algorithms are so useful for trainable models or real-life applications. It has a good use in robotics; basically, we can train robots, so that their prediction rate for good decisions will increase drastically.\r\n            </p>\r\n\r\n            <p>\r\n                So, I think genetic algorithm method will be used for so a long time in computer science until we find a better approach. I would say that this algorithm reflect\r\n                the nature's methods and the way how it solves the problems is very elegant. After all, nature has a huge amount of experience, and we only try to use its ways.\r\n            </p>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Blog1","export default __webpack_public_path__ + \"static/media/web2vsweb3.7089bbd6.png\";","export default __webpack_public_path__ + \"static/media/eth.fbcc86dd.jpg\";","import web2vsweb3 from \"./web2vsweb3.png\";\r\nimport eth from \"./eth.jpg\"\r\n\r\nconst Blog3 = () => {\r\n    return (\r\n        <div>\r\n            <p>\r\n                Now Web3 is gaining more and more popularity, there is a debate going on about how applicable and reliable web3 is. While some people talk about its decentralized aspect, some others talk about reliability of web. We all know that transition between web1 and web2 was quick; people started interacting with web pages. Clients suddenly started communicating with centralized servers. With this change, we were also introduced to cookies, user session data and so on. Most of the web service providers collect user data and use it for their business or they can even sell it in some cases. So, the mentality here is that most of those web services are free but users are products, and they pay their fees with their private data.\r\n            </p>\r\n            <img src={web2vsweb3} alt=\"web2vsweb3\" width=\"90%\" height=\"40%\" style={{ display: \"block\", margin: \"auto\", padding: \"1%\" }} />\r\n            <p>\r\n                What about web3? With web3 there will not be service owners or data collectors, therefore we, as internet users, are expected to gain more privacy on our personal data. In a sense, we will own our data and services. Basically, on a web3 website, we only use our wallet as our identity, and since it's a peer-to-peer system there is not any centeralized service provider that can control users. It's very promising and so many people are working on blockchain systems today.\r\n            </p>\r\n            <h4>As a person who works on decentralized applications, I want to talk about the potential risks of web3, therefore blockchain services:</h4>\r\n            <ul>\r\n                <li style={{ margin: \"8px\" }}>\r\n                    Blockchain technology is quite transparent, so exploring transactions of peers are so easy. It is not private at all. So, this fact invalidates the claim of anonymity. Also, we can't ignore the fact that there would be some dedicated corporates who try to scrap data from blockchains. But we can't say there is a significant amount of private data exposure of users. I think transparency of blockchains is ok. This fact directly invalidates the criticism about illegal activities on decentralized finance systems. So, blockchains still doesn't protect our privacy totally but it is way much better than what web2 offers.\r\n                </li>\r\n                <li style={{ margin: \"8px\" }}>\r\n                    High gas or maintenance fees, this is an ongoing problem on Ethereum blockchain and it is an undesired aspect of a blockchain; nobody would want to pay hundreds of dollars to just send a text over network.\r\n                </li>\r\n                <li style={{ margin: \"8px\" }}>\r\n                    The amount of energy being used by miners to handle peer transactions; recently this is a huge debate about how much energy proof-of-work method wastes.\r\n                </li>\r\n                <li style={{ margin: \"8px\" }}>\r\n                    Possible threats against blockchains, we know how the original ETH (now it's called ETC) had to be forked when the whole Ethereum blockchain was hacked with rare 51% hack. There can be other vulnerabilities that we would face in the future. This is truly a negative aspect of blockchains but can be overcome with experience and precautions.\r\n                </li>\r\n                <li style={{ margin: \"8px\" }}>\r\n                    A universal blockchain service is not possible, let's assume humanity colonized mars and assume cryptocurrencies are very commonly used. What if someone from mars wants to send a transaction to earth? This will take at least 2 hours to process transaction and return the results to the sender because of the distance between earth and mars. This can be an obstacle for future.\r\n                </li>\r\n                <li style={{ margin: \"8px\" }}>\r\n                    Web3 would remove databases from existence because of the nature of web3. This is a possibility, but highly unlikely under current circumstances.\r\n                </li>\r\n            </ul>\r\n\r\n            <p>\r\n                So, there are tradeoffs of using web3 in the long term. I personally wonder if this transition will happen or not. Perhaps we will see a better system than the current state of web3. Also, it seems that web3 services can't reach to high-end users successfully. Concepts such as, DeFi, NFTs, metaverse are the current trends but we still don't use web3 services in our daily life. Cryptocurrencies aren't even adapted in most of the countries.\r\n            </p>\r\n            <p>\r\n                I started with negative aspects of web3. But why? I wanted to point out the fact that those risks exist, and they should be solved if web3 is going to be adapted totally.\r\n            </p>\r\n            <h3>What web3 can achieve?</h3>\r\n            <p>\r\n                For sure cryptocurrencies are very promising and they showed us many times how useful they can be. For example, so many coins are donated to Ukraine from all over the world to help Ukrainians. There are many other charity examples like that.\r\n            </p>\r\n\r\n            <p>\r\n                In the long term, I believe that blockchain technology will be quite more applicable and useful for our daily lives. Indeed, it has many usage areas. Imagine a voting system that uses a properly implemented blockchain system; a system that never miscounts votes and prevents any fraud attempt. Or think about immutability aspect of blockchains, all the transactions will be in the blockchain without any change; so, this fact assures all the peers about reliability of the system.\r\n            </p>\r\n            <p>\r\n                Blockchain technology will impact many areas and it will firstly change the finance system we know today. We can easily see this happening by looking at how much the total value of cryptocurrencies has been increased.\r\n            </p>\r\n            <h3>How to improve it?</h3>\r\n            <p>\r\n                A blockchain is based on cryptography and math. Basically, on a standard blockchain system, we use hashing algorithms, public key cryptography standards and some sweet data structures.\r\n            </p>\r\n            <p>\r\n                So, with those brilliant mathematical concepts we create such an amazing system. But as we mentioned earlier, maintaining this system is costly, wasteful, and inefficient.\r\n            </p>\r\n            <h4>\r\n                There are two main concepts that a blockchain can use.\r\n            </h4>\r\n            <ul>\r\n                <li style={{ margin: \"8px\" }}>\r\n                    <h4>Proof of Work:</h4>\r\n                    This method is based on how much work is done by a peer. In a blockchain system, miners always try to find a desired hash result. They just keep going until they find a result and gain the reward. This method is highly inefficient since it constantly uses processor power and causes high amount of energy waste.\r\n                </li>\r\n                <li style={{ margin: \"8px\" }}>\r\n                    <h4>Proof of Stake:</h4>\r\n                    This method is based on creating a consensus by stakeholders. In a blockchain system that uses proof-of-stake concept, every action gets permitted by stakeholders (validators). The more you stake, the more authority you have on the system. This method is quite efficient compared to proof-of-work concept. First, you stake some number of coins and gain the trust of other peers. Second, in those systems if a validator tries to cheat then he will be banned from the chain and lose his stakes. Third, this method guards blockchain against some hacking threats. Overall, it's much better than the old method and is the current trend.\r\n                </li>\r\n            </ul>\r\n\r\n            <p>\r\n                So, there is an efficient way to use those mathematical concepts and it is already being implemented on some blockchains (For example, Ethereum will update to ETH 2.0 soon which uses proof-of-stake instead of proof-of-work).(For example, Ethereum will update to ETH 2.0 soon which uses proof-of-stake instead of proof-of-work).\r\n            </p>\r\n            <img src={eth} alt=\"eth\" width=\"90%\" height=\"40%\" style={{ display: \"block\", margin: \"auto\", padding: \"1%\" }} />\r\n            <p>\r\n                The main question is, are we going to choose web3 over web2 or keep using both at the same time? Nobody can answer this for now. My opinion is that both will exist, and people will use the systems that they trust most as always. Is web3 going to gain the trust of people? I don't know. Is web3 going to provide enough privacy for the users? Yes!\r\n            </p>\r\n            <p>\r\n                We talked about the feasibility about those systems, and I think we should consider one more question. Is web3 really decentralized? Can we trust very big stakeholders? I think web3 can be truly decentralized if we build it properly and create a perfectly balanced consensus. This can be the new age of internet or can be a futile attempt or can be an improved system; it is all up to the people.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog3\r\n","import { useParams, Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport BlogFooter from \"./blogComponentes/BlogFooter\"\r\n\r\nimport Blog1 from './blogs/blog1/Blog1';\r\nimport Blog2 from './blogs/blog2/Blog2';\r\nimport Blog3 from './blogs/blog3/Blog3';\r\n\r\nconst Blog = ({ blogs }) => {\r\n    const [blog, setBlog] = useState(undefined);\r\n    const [content, setContent] = useState(undefined);\r\n    const { _id } = useParams();\r\n\r\n    useEffect(() => {\r\n        const blog = blogs.find((blog) => blog._id === _id);\r\n        setBlog(blog);\r\n\r\n        if (blog.title === \"On Cryptography\") {\r\n            setContent(<Blog1 />);\r\n\r\n        }\r\n        else if (blog.title === \"My Thoughts on Genetic Algorithms\") {\r\n            setContent(<Blog2 />);\r\n        }\r\n        else if (blog.title === \"Web2 vs Web3 and Privacy\") {\r\n            setContent(<Blog3 />);\r\n        }\r\n    }, [])\r\n    /*       <Link to=\"/blog\" style={{ display: \"inline\", float: \"right\", color: \"white\" }} >\r\n                        <button className=\"button\">Go back</button>\r\n                    </Link>\r\n                    <hr id='bloghr' /> */\r\n    return (\r\n        <div className='blog'>\r\n            {blog !== undefined &&\r\n                <div className='blogBlock'>\r\n                    <h1 style={{ color: \"rgb(41, 161, 103)\" }}>{blog.title}</h1>\r\n                    <div >\r\n                        {content}\r\n                        <hr />\r\n                        <BlogFooter blog={blog} />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Blog\r\n","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction ScrollToTop({ history }) {\r\n    useEffect(() => {\r\n        const unlisten = history.listen(() => {\r\n            window.scrollTo(0, 0);\r\n        });\r\n        return () => {\r\n            unlisten();\r\n        }\r\n    }, []);\r\n\r\n    return (null);\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import { Link } from 'react-router-dom'\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { Squash as Hamburger } from 'hamburger-react'\r\nimport githubIco from \"../assets/img/github.png\"\r\nimport linkedinIco from \"../assets/img/linkedin.png\"\r\n\r\nexport const Nav = ({ click }) => {\r\n    const [hamburgerMenu, setHamburgerMenu] = useState(false);\r\n    const ref = useRef(null);\r\n\r\n    const handleClickOutside = (e) => {\r\n        if (ref.current && !ref.current.contains(e.target)) {\r\n            setHamburgerMenu(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClickOutside, true);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutside, true);\r\n        };\r\n    }, []);\r\n\r\n    const closeMenu = () => {\r\n        if (hamburgerMenu === true) {\r\n            setHamburgerMenu(false);\r\n        }\r\n    }\r\n    return (\r\n        <div >\r\n            <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://pro.fontawesome.com/releases/v5.14.0/css/all.css\"\r\n            />\r\n\r\n            <Link to=\"/\" id='navName' style={{ marginLeft: \"10px\", fontSize: \"180%\", position: \"relative\", zIndex: \"20\" }} >\r\n                Berk Kırtay\r\n            </Link>\r\n            <div style={{ float: \"right\" }}>\r\n                <ul className=\"nav\">\r\n                    <li className=\"nav\" style={{ float: \"right\" }}><Link to=\"/contact\">Contact me</Link>\r\n                    </li>\r\n                    <li className=\"nav\" style={{ float: \"right\" }}><Link to=\"/blog\">My Blog</Link>\r\n                    </li>\r\n                    <li className=\"nav\" style={{ float: \"right\" }}>\r\n                        <a href=\"https://github.com/berkkirtay\" target=\"_blank\" rel=\"noopener noreferrer\">My GitHub <i style={{ zoom: \"0.8\" }} className=\"fas fa-external-link-alt\"></i></a>\r\n                    </li>\r\n\r\n                    <li className=\"nav\" style={{ float: \"right\" }}>\r\n                        <a href=\"https://github.com/berkkirtay\" target=\"_blank\" rel=\"noopener noreferrer\">My Linkedin <i style={{ zoom: \"0.8\" }} className=\"fas fa-external-link-alt\"></i></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"hamburgerMenu\"\r\n                ref={ref}>\r\n                <Hamburger\r\n                    toggled={hamburgerMenu}\r\n                    toggle={setHamburgerMenu}\r\n                />\r\n            </div>\r\n            <hr id='bloghr' />\r\n            <style jsx=\"true\">{`\r\n                @media screen and (orientation: portrait) {\r\n                    li.nav {\r\n                        color: white;\r\n                        float:none;\r\n                        justify-content: center;\r\n                        list-style: none;\r\n                        height: 140px;\r\n                        display: flex;\r\n                        align-items:center;\r\n                    }\r\n                    ul.nav {\r\n                        margin-top: 50px;\r\n                        display:  ${hamburgerMenu ? 'flex' : 'none'};\r\n                        flex-direction: column;\r\n                        background-color:#101820ff;\r\n                        flex-wrap: wrap;\r\n                        position: absolute;\r\n                        z-index:3;\r\n                        right: 0;\r\n                        top: 0;\r\n                        height:650px;\r\n                        width: 800px;\r\n                        justify-content: center;\r\n                        transition-duration: 1s;\r\n                        transition-property: margin-bottom;\r\n                    }\r\n                    .nav a {\r\n                        font-size: 130%;\r\n                        width: 800px;\r\n                    }\r\n                }\r\n            `}</style>\r\n        </div >\r\n    )\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport crypto from \"crypto\"\r\nimport Contact from \"./components/contact/Contact\";\r\nimport Home from \"./components/Home\"\r\nimport Blogs from \"./components/blog/Blogs\";\r\nimport Blog from \"./components/blog/Blog\";\r\nimport ScrollToTop from \"./components/tools/ScrollToTop\"\r\n\r\nimport { Nav } from \"./components/Nav\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst App = () => {\r\n\r\n  var blogs = [\r\n    {\r\n      \"_id\": crypto.createHash(\"SHA1\").update(\"On Cryptography\").digest(\"base64\"),\r\n      \"title\": \"On Cryptography\",\r\n      \"text\": \"Cryptography has a long history. The story starts with Caesar himself. He created the first known encryption method called Caesar Cipher. He used this method to send secret messages to his legions on the battlefield. Long story short, you can say his method was so easily breakable\",\r\n      \"date\": \"November 04, 2021\"\r\n    },\r\n    {\r\n      \"_id\": crypto.createHash(\"SHA1\").update(\"My Thoughts on Genetic Algorithms\").digest('base64'),\r\n      \"title\": \"My Thoughts on Genetic Algorithms\",\r\n      \"text\": \"Nowadays, everyone talks about artificial intelligence. We can say AI is almost the most hyped area of computer science. What about how AI works? What kind of algorithms do we use to make our computers perform those intelligent things?\",\r\n      \"date\": \"November 19, 2021\"\r\n    },\r\n    {\r\n      \"_id\": crypto.createHash(\"SHA1\").update(\"Web2 vs Web3 and Privacy\").digest('base64'),\r\n      \"title\": \"Web2 vs Web3 and Privacy\",\r\n      \"text\": \"Now Web3 is gaining more and more popularity, there is a debate going on about how applicable and reliable web3 is. While some people talk about its decentralized aspect, some others talk about\",\r\n      \"date\": \"March 08, 2022\"\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div id=\"parent\" >\r\n      <Router>\r\n        <ScrollToTop />\r\n        <Nav />\r\n        <Switch>\r\n          <Route path=\"/blog/:_id\">\r\n            <Blog blogs={blogs} />\r\n          </Route>\r\n\r\n          <Route path=\"/blog\">\r\n            <Blogs blogs={blogs} />\r\n          </Route>\r\n\r\n          <Route path=\"/contact\">\r\n            <Contact />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n        <ScrollToTop />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}